GIT Basic Commands
=====================
git config --global user.name "Thulasi"
git config --global user.email "k.ramathulasi@gmail.com"
---------------------------------------------------------
This command sets the author name and email address respectively to be used with your commits.

git init Local
--------------
This command is used to start a new repository. // /Local/.git

git clone https://github.com/kramathulasi/TestGit.git
--------------------------------------------------------
This command is used to obtain a repository from an existing URL.

git add test.txt
----------------------
This command adds a test.txt file to the staging area.

git add *  
-------------------
This command adds one or more to the staging area.

git commit -m "First Commit" 
----------------------------
Commit staged files to branch
This command records or snapshots the file permanently in the version history.

git commit -a  
-------------------
This command commits any files you’ve added with the git add command and also commits any files you’ve changed since then.

git diff
--------------
This command shows the file differences which are not yet staged.

git diff --staged
-----------------
This command shows the differences between the files in the staging area and the latest version present.

git diff [first branch] [second branch]  
---------------------------------------
This command shows the differences between the two branches mentioned.

git reset test.txt
---------------------
This command unstages the file, but it preserves the file contents.

git status  
--------------
This command lists all the files that have to be committed.

git rm [file]  
---------------
This command deletes the file from your working directory and stages the deletion.

git log
-----------------
This command is used to list the version history for the current branch

git log --follow[file]  
-----------------------
This command lists version history for a file, including the renaming of files also.

git show [commitID]  
---------------------
This command shows the metadata and content changes of the specified commit.

git tag [commitID]  
----------------------
This command is used to give tags to the specified commit.

git branch  
-------------------
This command lists all the local branches in the current repository.


git branch -r
-------------------
This command lists all the remote branches in the current repository.

git branch [branch name]  
--------------------------
This command creates a new branch.

git branch -d [branch name]  
----------------------------
This command deletes the feature branch.

git checkout [branch name]  
------------------------------
This command is used to switch from one branch to another.

git checkout -b Dev
--------------------
New branch Dev is created in Local repository and switched to Dev branch  

git checkout Local
-------------------
Switched to Local branch

git merge [branch name] 
--------------------------
This command merges the specified branch’s history into the current branch.

git remote add [variable name] [Remote Server Link] 
git remote add origin https://github.com/kramathulasi/TestGit.git 
---------------------------------------------------
This command is used to connect your local repository to the remote server.

git push [variable name] master  
git push origin master
--------------------------------
This command sends the committed changes of master branch to your remote repository.

git push [variable name] [branch]  
----------------------------------
This command sends the branch commits to your remote repository.

git push -u origin feature_branch_name
-----------------------------------------
Push your branch to the remote repository:

git push origin *:*
---------------------------
Push all branches changes from local repository to remote

git push -u origin --all
--------------------------
All changes in all branches pushed to remote repository. New branch also created if not exist in remote repository.

git push --all [variable name] 
git push --all origin
--------------------------------
This command pushes all branches to your remote repository.

git push [variable name] :[branch name]  
git push origin:branch2
---------------------------------------
This command deletes a branch on your remote repository. branch2 is deleted from remote repository

git pull origin master 
--------------------------
This command fetches and merges changes on the remote server to your working directory.

git fetch origin branch1:branch1
--------------------------------
This command fetches and merges changes on the remote server branch1 to local working directory branch1.

git stash save  
-----------------
This command temporarily stores all the modified tracked files.

git stash pop  
-----------------
This command restores the most recently stashed files.

git stash list  
-----------------
This command lists all stashed changesets.

git stash drop  
-------------------
This command discards the most recently stashed changeset.

Conflicts Merging:
-----------------------------------------
-----------------------------------------
git pull origin 
--------------
Merge the changes from remote to Local repository if any conflicts are there it does not allow us to modify.
Modify the conflicted files and  add to staging area and commit the changes

git merge --abort
----------------------
to abort the merge

git stash save "Saved for later
------------------------------
Saved for later use

git stash list
-----------------
list out the stashed files which are not commited

git stash apply stash[0]
-----------------------
Apply the changes

git stash pop
------------------
Removed stash files

git stash drop stash[0]
---------------------
dropped selected stash file

git log --oneline
----------------
display commits in one line


git log --oneline -3
----------------
display commits in one line latest 3


git log --since='2 weeks ago'
--------------------
display commits in one line

git log --pretty=oneline --reverse | head -4

git log --author='Ramathulasi'
----------------------------------
to view commits for a particular person


git commit --amend
-------------------------

git shortlog
--------------------
This command produces a shortened version of the output of the git log command. You may wish to use this command if, for example, you need to generate a list of changes for release notes or a change log.

git reset --soft HEAD~3
--------------------------


git reset --hard HEAD~3
--------------------------
throw away the last 3 commits

git reset --mixed HEAD~3
--------------------------
mixed last 3 commits

git checkout -b branch4 upstream/branch2
-----------------------------------------
branch4 created and files taken from branch2

git reflog 
-------------

git status -sb
------------------
s -summary
b - branch

git diff --cached
--------------------------------
Compare the files from staging area to local repository

git checkout -- test.txt
---------------------------
To Discard changes in working directory

git reset HEAD test.txt
--------------------------
to unstage file from staging area

git show-branch branch2
-----------------------------
Show the commit details in branch
git pull --rebase
-------------------
merge and fetcht

git branch -v
-----------------

git branch -a

git branch --no-merged
git branch --merged

git rebase master
git rebase --continue

git branch --contains
 
Display Parent branch
-------------------------------- 
git show-branch | grep '*' | grep -v "$(git rev-parse --abbrev-ref HEAD)" | head -n1 | sed 's/.*\[\(.*\)\].*/\1/' | sed 's/[\^~].*//'
